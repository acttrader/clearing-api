openapi: 3.0.0
info:
  title: Portfolios API
  description: |-
    This is a Portfolios Server based on the OpenAPI 3.0 specification.  
  version: '1.0'
servers:
  # Added by API Auto Mocking Plugin
  - description: sandbox endpoint
    url: https://portfolios.acttrader.com/
tags:
  - name: portfolios
    description: Everything about your Portfolios
  - name: symbols
    description: Price sources and symbols
paths:
  /portfolios:
    get:
      tags:
        - portfolios
      summary: Get all portfolios
      description: Portfolios list
      operationId: getPortfolio
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolios'
  /portfolio:
    post:
      tags:
        - portfolios
      summary: Add a new portfolio
      description: Add a new portfolio.
      operationId: addPortfolio
      requestBody:
        description: Create a new portfolio in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPortfolio'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPortfolioResponce'
        
  /portfolio/{id}:
    get:
      tags:
        - portfolios
      summary: Get portfolio by ID
      description: Get portfolio by ID
      parameters:
        - name: id
          in: path
          description: portfolio Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPortfolioResponce'
    put:
      tags:
        - portfolios
      summary: Update portfolio by ID
      description: update portfolio
      operationId: updatePortfolio
      parameters:
        - name: id
          in: path
          description: portfolio Id to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Create a new strategy in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPortfolio'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPortfolioResponce'
    delete:
      tags:
        - portfolios
      summary: Delete portfolio by ID
      operationId: deletePortfolio
      parameters:
        - name: id
          in: path
          description: portfolio Id to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
  /symbols:
    get:
      tags:
        - symbols
      summary: Get all sources and symbols
      description: Symbol list
      operationId: getSymbols
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Symbols'
components:
  schemas:
    PostPortfolio:
      type: object
      example:
        name: CRYPTO.portfolio
        divider: "10000"
        symbols: 
          - source: BINANCE
            symbol: BTCUSDT
            weight: "1"
          - source: BINANCE
            symbol: LTCUSDT
            weight: "5"
          - source: BINANCE
            symbol: XRPUSDT
            weight: "10000"
    Portfolios:
      type: object
      example:
          - id: 6
            name: CRYPTO.portfolio
            divider: "10000"
            symbols: 
              - source: BINANCE
                symbol: BTCUSDT
                weight: "1"
              - source: BINANCE
                symbol: LTCUSDT
                weight: "5"
              - source: BINANCE
                symbol: XRPUSDT
                weight: "10000"
    PostPortfolioResponce:
      type: object
      example:
          id: 6
          name: CRYPTO.portfolio
          divider: "10000"
          symbols: 
            - source: BINANCE
              symbol: BTCUSDT
              weight: "1"
            - source: BINANCE
              symbol: LTCUSDT
              weight: "5"
            - source: BINANCE
              symbol: XRPUSDT
              weight: "10000"
    Symbols:
      type: object
      example:
          - source: ONEZERO
            symbols: [EURUSD, GBPUSD, GBPJPY]
          - source: BINANCE
            symbols: [USUALTRY, LPTBTC, ADXUSDT]
    Success:
      type: object
      example:
        success: true
    ErrorResponse:
      type: object
      example:
        success: false
        message: error description
        errorId: NKbVEzkD
        errorCode: ERROR_CODE
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer