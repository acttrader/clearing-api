openapi: 3.0.0
info:
  title: ActTrader API - OpenAPI 3.0
  description: |-
    This is a ActTrader API based on the OpenAPI 3.0 specification.  
  version: '1.0'
servers:
  # Added by API Auto Mocking Plugin
  - description: test.3 platform endpoint
    url: http://stest-01.sysfx.com:10013/
  - description: test.5 platform endpoint
    url: http://stest-01.sysfx.com:10113/
tags:
  - name: Instruments
    description: ""
  - name: Operations
    description: ""
  - name: Users
    description: ""
paths:
  /accounts:
    get:
      tags:
        - Users
      summary: method to get user accounts
      description: Get accounts list
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponce'
          description: An unexpected error response.
      security:
        - Bearer: []
  /shifts:
    get:
      tags:
        - Users
      summary: method to get user shifts
      description: Get trader shifts
      parameters:
      - name: "userid"
        in: query
        description: "Numeric ID of the user"
        required: false
        schema:
            type: integer
      - name: "instrumentid"
        in: query
        description: "Numeric ID of the instrument"
        required: false
        schema:
            type: integer
      - name: "instrumentname"
        in: query
        description: "Name of the instrument"
        required: false
        schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shifts'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponce'
          description: An unexpected error response.
      security:
        - Bearer: []

  /instruments:
    get:
      tags:
        - Instruments
      summary: method to get all instruments
      description: Get trader instruments
      parameters:
      - name: "instrument_id"
        in: query
        description: "Numeric ID of the instrument"
        required: false
        schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instruments'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponce'
          description: An unexpected error response.
      security:
        - Bearer: []
components:
  schemas:
    Account:
      type: object
      
      example: 
        accountId: 10
        balance: '10001.01'
        currency: USD
        
      properties:
        accountId:
          type: integer
        balance:
          type: string
        currency:
          type: string
          
    AccountList:
      type: object
      properties:
        data:
          items: 
            $ref: '#/components/schemas/Account'
          type: array
        success: 
          type: boolean
      example:
        success: true
        data:
          - id: 100
            balance: '10000.01'
            currency: USD
          - id: 101
            balance: '10000.01'
            currency: EUR

    Shift:
      type: object
      
      example: 
        instrument_id: 10
        bid: '0.01'
        ask: '0.01'
        distance: '0.01'
        
      properties:
        instrument_id:
          type: integer
        bid:
          type: string
        ask:
          type: string
        distance:
          type: string

    Shifts:
      type: object
      properties:
        data:
          items: 
            $ref: '#/components/schemas/Shift'
          type: array
        success: 
          type: boolean
      example:
        success: true
        data:
          - instrument_id: 1
            bid: '0.01'
            ask: '0.01'
            distance: '0.01'
          - instrument_id: 3
            bid: '0.01'
            ask: '0.01'
            distance: '0.01'

    Instrument:
      type: object
      
      example: 
        instrument_id: 10
        instrument_name: EUR/USD
        market_currency: EUR
        base_currency: USD
        contract_size: '100000'
        point_size: '0.0001'
        precision: '0.00001'
        
      properties:
        instrument_id:
          type: integer
        instrument_name:
          type: string
        market_currency:
          type: string
        base_currency:
          type: string
        contract_size:
          type: string
        point_size:
          type: string
        precision:
          type: string
    Instruments:
      type: object
      properties:
        data:
          items: 
            $ref: '#/components/schemas/Instrument'
          type: array
        success: 
          type: boolean
      example:
        success: true
        data:
          - instrument_id: 1
            instrument_name: 'EUR/USD'
            market_currency: 'EUR'
            base_currency: 'USD'
            contract_size: '10000'
            point_size: '0.0001'
            precision: '0.00001'
          - instrument_id: 2
            instrument_name: 'GBP/USD'
            market_currency: 'GBP'
            base_currency: 'USD'
            contract_size: '10000'
            point_size: '0.0001'
            precision: '0.00001'
    errorResponce:
      example:
        success: false
        error: LOAD_FAILED
      properties:
        success:
          type: boolean
        error:
           type: string
      type: object
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer